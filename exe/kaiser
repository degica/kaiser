#!/usr/bin/env ruby

require 'optimist'
require 'fileutils'
require 'yaml'
require 'json'
require 'pty'
require 'erb'

require 'kaiser'

SUB_COMMANDS = %w[
  init
  deinit
  up
  down
  shutdown
  db_load
  db_save
  db_reset
  db_reset_hard
  logs
  attach
  login
  show
].freeze

opts = Optimist.options do
  banner <<-BANNER
Kaiser v#{Kaiser::VERSION}

Subcommands:
#{SUB_COMMANDS}
  BANNER
  opt :verbose, "Show Kaiser's debug output", short: '-v'
  opt :quiet, 'Suppress all output', short: '-q'
  stop_on SUB_COMMANDS
end

cmd = ARGV.shift

Optimist.educate unless SUB_COMMANDS.include?(cmd)

out = Kaiser::Dotter.new
info_out = Kaiser::AfterDotter.new(dotter: out)

if opts[:quiet]
  out = File.open(File::NULL, 'w')
  info_out = File.open(File::NULL, 'w')
elsif opts[:verbose]
  out = $stderr
end

Optimist.die 'No Kaiserfile in current directory' unless File.exist? 'Kaiserfile'

cli = Kaiser::KaiserCli.new(
  `pwd`.chomp,
  debug_output: out,
  info_output: info_out
)
cli.send(:"#{cmd}")

puts ''
